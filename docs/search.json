[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Background\nMy name is Seth Lattner and I am originally from Statesboro, GA. I am currently a Master’s Student at the Southeastern Cooperative Wildlife Disease Study, housed in UGA’s College of Veterinary Medicine. Prior to beginning graduate school, I received a BSFR in Wildlife Resources at UGA’s Warnell School of Forestry and Natural Resources. A fun fact about me is that I have an identical twin brother!\n\n\n\nResearch Interests/Experience\nI am currently studying canine distemper virus in wild carnivores of North Carolina. My undergraduate research focused on bat habitat use on a barrier island. Additionally, I assisted in projects studying Guinea Worm Disease and Snake Fungal Disease. I have spent field seasons assisting in research on small mammals and snakes of southwest Georgia.\n\n\n\nCoding/Data Analysis Experience\nI was introduced to R coding and data analysis during my undergraduate coursework/research and have tried to continue improving my proficiency in these areas through graduate coursework. I have a lot to learn, but I am enjoying the process. I am interested in working with GitHub and Quarto, as I have no prior experience with these tools.\nI am excited about the start-to-finish approach to data management and analysis in this course. My goal is to learn and practice using tools and techniques to streamline my data management and analysis that I can then use in my own research.\n\n\nmicroshades R Package\nWhile I myself am not colorblind, using color palettes that are accessible to colorblind individuals is of growing interest in the scientific community. A relatively recent publication from ASM in the journal Microbiology Resource Announcements details a new R package, named microshades, that provides a wide range of colorblind-accessible color options for use in microbiome data visualization, as well as some other useful functions."
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Loading/Examining Data\nFirst, I want to take a look at the gapminder data I will be using from the ‘dslabs’ package.\n\n## load required packages\nlibrary(tidyverse)\nlibrary(dslabs)\nlibrary(ggplot2)\n\n\n#examine gapminder data frame\nhelp(\"gapminder\")\n\nstarting httpd help server ... done\n\n#examine data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#look at summary of data\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#examine object type\nclass(gapminder)\n\n[1] \"data.frame\"\n\n\n\n\nProcessing Data\nNow, I want to look closer at the African countries from the gapminder dataframe. I also want to look specifically at a few variables, so I will pull those out into new objects.\n\n#select only African countries\nafricadata <-\n  filter(gapminder, continent==\"Africa\")\n#select only infant mortality and life expectancy from africadata\nobj1<-subset(africadata, select = c(infant_mortality, life_expectancy))\nstr(obj1)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(obj1)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n#select only population and life expectancy from africadata\nobj2<-subset(africadata, select = c(population, life_expectancy))\nstr(obj2)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(obj2)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51                         \n\n\n\n\nPlotting Data\nNow I want to plot the data from the African countries to visualize any trends.\n\n#plot life exp as a func of inf mortality\nggplot(data = obj1, aes(infant_mortality, life_expectancy))+\n  geom_point(cex=3, alpha=0.3)+\n  ylab(\"Life Expectancy (Yrs)\")+\n  xlab(\"Infant Mortality (per 1000 Individuals)\")+\n  ylim(0,85)+\n  theme_classic()\n\n\n\n#plot life exp as a func of population size\nggplot(data = obj2, aes(log(population), life_expectancy))+\n  geom_point(cex=3, alpha=0.3)+\n  ylab(\"Life Expectancy (Yrs)\")+\n  xlab(expression(\"Log\"[e]*\"(Population)\"))+\n  theme_classic()\n\n\n\n\n\n\nMore Processing\nThese plots are pretty messy, since each country was sampled across numerous years. To clean this up, I want to first find missing values in the dataset.\n\n#find missing values for infant mortality, then the years in which the data is missing\nmissing<-is.na(africadata$infant_mortality)\nmissing_years<-africadata$year[missing]\nmissing_years\n\n  [1] 1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 1961 1961 1961 1961 1961\n [16] 1961 1961 1961 1961 1961 1961 1961 1961 1961 1961 1961 1961 1962 1962 1962\n [31] 1962 1962 1962 1962 1962 1962 1962 1962 1962 1962 1962 1962 1962 1963 1963\n [46] 1963 1963 1963 1963 1963 1963 1963 1963 1963 1963 1963 1963 1963 1963 1964\n [61] 1964 1964 1964 1964 1964 1964 1964 1964 1964 1964 1964 1964 1964 1964 1965\n [76] 1965 1965 1965 1965 1965 1965 1965 1965 1965 1965 1965 1965 1965 1966 1966\n [91] 1966 1966 1966 1966 1966 1966 1966 1966 1966 1966 1966 1967 1967 1967 1967\n[106] 1967 1967 1967 1967 1967 1967 1967 1968 1968 1968 1968 1968 1968 1968 1968\n[121] 1968 1968 1968 1969 1969 1969 1969 1969 1969 1969 1970 1970 1970 1970 1970\n[136] 1971 1971 1971 1971 1971 1971 1972 1972 1972 1972 1972 1972 1973 1973 1973\n[151] 1973 1973 1973 1974 1974 1974 1974 1974 1975 1975 1975 1975 1975 1976 1976\n[166] 1976 1977 1977 1977 1978 1978 1979 1979 1980 1981 2016 2016 2016 2016 2016\n[181] 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016\n[196] 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016\n[211] 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016\n[226] 2016\n\n\n\n\nAdded by BETELIHEM G.\n\n\nThe above code creates a long list, how about only looking at unique missing numbers to narrow down the list and make it a bit easier\n\nmissing_years_unique<-unique(missing_years)\n\n\n\nAdded by BETELIHEM G, then print to view\n\nprint(missing_years_unique)\n\n [1] 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974\n[16] 1975 1976 1977 1978 1979 1980 1981 2016\n\n\n\n\nMore Plotting\nNow that I’ve found what years contain missing values for infant mortality, I am going to select a year without missing data points (2000) and recreate the plots from earlier using only data from that year.\n\n#created new object with only data from year 2000\nafricadata2000<-\n  filter(africadata, year==\"2000\")\n\n#plot life exp as a func of inf mortality for year 2000\nggplot(data = africadata2000, aes(infant_mortality, life_expectancy))+\n  geom_point(cex=3, alpha=0.3)+\n  ylab(\"Life Expectancy (Yrs)\")+\n  xlab(\"Infant Mortality (per 1000 Individuals)\")+\n  ylim(0,85)+\n  theme_classic()\n\n\n\n#plot life exp as a func of population size for year 2000\nggplot(data = africadata2000, aes(log(population), life_expectancy))+\n  geom_point(cex=3, alpha=0.3)+\n  ylab(\"Life Expectancy (Yrs)\")+\n  xlab(expression(\"Log\"[e]*\"(Population)\"))+\n  theme_classic()\n\n\n\n\n\n\nStatistical Analysis\nFinally, I want to fit a linear regression to both of these functions to determine if there is any statistical significance.\n\n#fit linear regression to both plotted functions\nfit1<-lm(life_expectancy~infant_mortality, data = africadata2000)\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africadata2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      71.29331    2.42611  29.386  < 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\nfit2<-lm(life_expectancy~population, data = africadata2000)\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africadata2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   <2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\n\n\nBased on these results, I can conclude that there is a significant negative effect of infant mortality on life expectancy (p = 2.83e-08) and that population size had no significant effect on life expectancy (p = 0.616).\n\n\nThe following was added by Vijay Panthayi\nLet’s see if we can do anything else interesting with the africadata data set.\nLet’s plot the GDP of each African country as a function of the country’s respective fertility (average number of children per woman).\nFirst, we want to remove any data value that is missing.\n\nmissinggdp <- na.omit(africadata)\n\nNext, let’s create the plot with the new data set that removed all missing gdp values.\n\nggplot(data=missinggdp, aes(x=fertility, y=gdp)) +geom_point(size=2, shape=23)\n\n\n\n\nIt appears that generally, higher GDP occurs with lower fertility rates, however, the number of data points that show that is far lower than the mass at the bottom which tends to show that gdp and fertility rates have no correlation.\nLet’s run a linear regression fit on the data to see if there is a trend in the data mathematically.\n\nfitgdp <- lm(gdp~fertility, data = missinggdp)\nsummary(fitgdp)\n\n\nCall:\nlm(formula = gdp ~ fertility, data = missinggdp)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-3.128e+10 -8.340e+09 -2.807e+09  2.178e+09  1.634e+11 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  4.500e+10  1.833e+09   24.56   <2e-16 ***\nfertility   -6.097e+09  3.037e+08  -20.08   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.998e+10 on 2201 degrees of freedom\nMultiple R-squared:  0.1548,    Adjusted R-squared:  0.1544 \nF-statistic: 403.1 on 1 and 2201 DF,  p-value: < 2.2e-16\n\nplot(fitgdp)\n\n\n\n\n\n\n\n\n\n\n\n\n\nBased on these results, it is probable that there is no correlation between fertility and gdp. It appears that with a p-value of 2.2e-16, gdp is low regardless of fertility."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Seth Lattner",
    "section": "",
    "text": "Welcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "Placeholder file for the future visualization exercise."
  },
  {
    "objectID": "dataanalysis_exercise/code/dataanalysis_exercise.html",
    "href": "dataanalysis_exercise/code/dataanalysis_exercise.html",
    "title": "Data Analysis Exercise",
    "section": "",
    "text": "About the Data\nThis dataset is part of the BEAM (Bacteria, Enterics, Amoeba, and Mycotics) Dashboard, collected by the System for Enteric Disease Response, Investigation, and Coordination (SEDRIC). It contains information on food- and water-borne pathogens circulating in the United States.\n\n\nLoading Data\n\n#load required packages\nlibrary(tidyverse)\nlibrary(here)\nlibrary(zoo)\n\n\n#load data\nBEAM_data <- read_csv(here(\"dataanalysis_exercise\", \"data\", \"BEAM_Dashboard_-_Report_Data.csv\"))\n\nRows: 128342 Columns: 10\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (4): State, Source, Pathogen, Serotype/Species\ndbl (6): Year, Month, Number_of_isolates, Outbreak_associated_isolates, New_...\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(BEAM_data)\n\nRows: 128,342\nColumns: 10\n$ Year                            <dbl> 2017, 2017, 2017, 2017, 2017, 2017, 20~\n$ Month                           <dbl> 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,~\n$ State                           <chr> \"TX\", \"TX\", \"TX\", \"TX\", \"TX\", \"TX\", \"T~\n$ Source                          <chr> \"Stool\", \"Stool\", \"Stool\", \"Stool\", \"S~\n$ Pathogen                        <chr> \"Escherichia\", \"Escherichia\", \"Salmone~\n$ `Serotype/Species`              <chr> \"Shigella Flexneri Serotype Undetermin~\n$ Number_of_isolates              <dbl> 1, 14, 1, 5, 1, 2, 2, 1, 2, 2, 1, 16, ~\n$ Outbreak_associated_isolates    <dbl> NA, NA, NA, NA, NA, 2, NA, NA, NA, NA,~\n$ New_multistate_outbreaks        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA~\n$ New_multistate_outbreaks_unique <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA~\n\n\n\n\nData Cleaning\nNow that we have the data loaded, let’s tidy it up to get it ready for analysis. Thankfully, this is a relatively clean dataset, so wrangling it shouldn’t be too difficult.\nFirst, I’m going to reclassify the categorical variables.\n\nBEAM_data <- BEAM_data %>%\n  mutate(State = as.factor(State)) %>%\n  mutate(Source = as.factor(Source)) %>%\n  mutate(Pathogen = as.factor(Pathogen)) %>%\n  mutate(`Serotype/Species` = as.factor(`Serotype/Species`))\n\nglimpse(BEAM_data)  \n\nRows: 128,342\nColumns: 10\n$ Year                            <dbl> 2017, 2017, 2017, 2017, 2017, 2017, 20~\n$ Month                           <dbl> 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,~\n$ State                           <fct> TX, TX, TX, TX, TX, TX, TX, TX, TX, TX~\n$ Source                          <fct> Stool, Stool, Stool, Stool, Stool, Sto~\n$ Pathogen                        <fct> Escherichia, Escherichia, Salmonella, ~\n$ `Serotype/Species`              <fct> \"Shigella Flexneri Serotype Undetermin~\n$ Number_of_isolates              <dbl> 1, 14, 1, 5, 1, 2, 2, 1, 2, 2, 1, 16, ~\n$ Outbreak_associated_isolates    <dbl> NA, NA, NA, NA, NA, 2, NA, NA, NA, NA,~\n$ New_multistate_outbreaks        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA~\n$ New_multistate_outbreaks_unique <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA~\n\n\nI also want to group the total number of isolates of each pathogen for each year. This will help simplify the results and can be used for further analysis.\n\ngrouped_data <- BEAM_data %>%\n  group_by(Year, Pathogen) %>%\n  summarise(sum_isolates = sum(Number_of_isolates), .groups = 'drop')\nglimpse(grouped_data)\n\nRows: 18\nColumns: 3\n$ Year         <dbl> 2017, 2017, 2017, 2018, 2018, 2018, 2019, 2019, 2019, 202~\n$ Pathogen     <fct> Campylobacter, Escherichia, Salmonella, Campylobacter, Es~\n$ sum_isolates <dbl> 2756, 10017, 47477, 4813, 11108, 51385, 4414, 10943, 4695~\n\n\nNow that these variables are reclassified, I want to change the NA’s in a few columns to 0’s, which is more indicative of their actual value.\n\nBEAM_data <- BEAM_data %>%\n  replace(is.na(BEAM_data), 0)\n\nglimpse(BEAM_data)\n\nRows: 128,342\nColumns: 10\n$ Year                            <dbl> 2017, 2017, 2017, 2017, 2017, 2017, 20~\n$ Month                           <dbl> 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,~\n$ State                           <fct> TX, TX, TX, TX, TX, TX, TX, TX, TX, TX~\n$ Source                          <fct> Stool, Stool, Stool, Stool, Stool, Sto~\n$ Pathogen                        <fct> Escherichia, Escherichia, Salmonella, ~\n$ `Serotype/Species`              <fct> \"Shigella Flexneri Serotype Undetermin~\n$ Number_of_isolates              <dbl> 1, 14, 1, 5, 1, 2, 2, 1, 2, 2, 1, 16, ~\n$ Outbreak_associated_isolates    <dbl> 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0,~\n$ New_multistate_outbreaks        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~\n$ New_multistate_outbreaks_unique <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~\n\n\nThat will conclude the data cleaning I will be conducting. Perhaps more wrangling could have been done, but I think this is a good start and sets up some the next contributor fairly well.\n\n\nExploring the Data\nNow that the data is clean, I want to do some quick exploration of it before handing it off to the next contributor for a more complete analysis.\nThe following plots will help give a simple overview of what the data looks like without getting into any modeling.\n\nggplot(BEAM_data, aes(Pathogen, Number_of_isolates, color=Pathogen))+\n  geom_col()+\n  labs(title = \"Total Number of Isolates from Each Pathogen Type\")+\n  xlab(\"Pathogen Type\")+\n  ylab(\"Number of Isolates\")+\n  theme_classic()+\n  theme(legend.position = \"none\")\n\n\n\nggplot(grouped_data, aes(Year, sum_isolates, color=Pathogen))+\n geom_smooth()+\n  labs(title = \"Total Number of Isolates for Each Pathogen, 2017-2022\")+\n  xlab(\"Year\")+\n  ylab(\"Number of isolates\")+\n  theme_classic()\n\n\n\n\n\n\nData Analysis\nThere are many interesting questions that can be answered with this dataset. Among these, I am interested in:\n\nThe relationship between source and pathogen type and/or number of isolates\nThe relationship between serovar/species and outbreak association and/or number of new multistate outbreaks\nThe impact of state/year on the number of new multistate outbreaks\n\nHowever, this dataset could be used to address many other questions, and I will leave that to the next contributor’s judgement. Looking forward to seeing how this data will be analyzed!"
  }
]